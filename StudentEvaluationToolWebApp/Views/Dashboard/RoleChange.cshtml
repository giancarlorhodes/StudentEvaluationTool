@model StudentEvaluationToolWebApp.Models.ChangeRoleModel

@{
    ViewBag.Title = "Role Change";
}

<h2>Role Change</h2>


<div id="dialogSuccess" class="alert alert-success alert-dismissable" role="alert" hidden="hidden">
    @Model.DialogMessage  <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
</div>
<div id="dialogFailure" class="alert alert-danger alert-dismissable" role="alert" hidden="hidden">
    @Model.DialogMessage  <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
</div>


@using (Html.BeginForm("RoleChange", "Dashboard", FormMethod.Post))
{

    @*<table cellpadding="0" cellspacing="0">

            <tr>
                <td>Name: </td>
                <td>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>Username: </td>
                <td>
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>Password: </td>
                <td>
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>Role Name: </td>
                <td>
                    @Html.DropDownListFor(m => m.SelectedRoleId, Model.UserRoles)
                </td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Submit" class="btn btn-primary" />&nbsp;&nbsp;<input type="reset" value="Reset" onclick="ResetForm()" class="btn btn-primary" /></td>
            </tr>
        </table>*@

        <form>
            <div class="form-group">
                <label for="name">Name</label>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group">
                <label for="name">Name</label>
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(m => m.SelectedRoleId, Model.UserRoles, new { @class = "form-control" })
            </div>
            <input type="submit" value="Submit" class="btn btn-primary" />&nbsp;&nbsp;<input type="reset" value="Reset" onclick="ResetForm()" class="btn btn-primary" />
            @Html.HiddenFor(m => m.UserId)
        </form>


}



@section scripts {

    <script type="text/javascript" language="javascript">


        function ResetForm() {


        }

        $(document).ready(function () {

            @*var model = @Html.Raw(Json.Encode(Model));
            In your case if you just want the FloorPlanSettings object, simply pass the Encode method that property:

            var floorplanSettings = @Html.Raw(Json.Encode(Model.FloorPlanSettings));*@



            var SuccessOrFailure = @Html.Raw(Json.Encode(Model.DialogMessageType));


            if (SuccessOrFailure === 'Success') {

                $('#dialogSuccess').show();

            } 

             if (SuccessOrFailure === 'Failure') {

                $('#dialogFailure').show();

            }

        });

    </script>

}

